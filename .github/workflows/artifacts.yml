name: Artifacts
on:
  push:
    branches:
      - main
env:
  MONGODB_DB_NAME: demo
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      MONGODB_USERNAME: admin
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      # The cache step should be repeated for each job where 'install depends' runs
      # It tries to download cache by 'key', if it's not found, it will upload the folder(path) by the key after the job finish.
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
      - name: Output MongoDB name
        run: echo $MONGODB_USERNAME
      - name: Output MongoDB name in text
        run: |
          echo "MongoDB username: ${{ env.MONGODB_USERNAME }}"
  build:
    needs: test
    runs-on: ubuntu-latest
    # Use outputs to pass key-value pairs between jobs.(For example: filenames) (1)
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      # Output value part (2)
      - name: Publish JS filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
          # path: |
          #   dist
          #   package.json

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: List files
        run: ls -lah
      # Get outputs from another job
      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy
        run: echo "Deploying..."
